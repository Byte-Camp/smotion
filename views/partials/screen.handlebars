<script>
var Screen = require("Screen");
</script>

<video id="video-{{screenNum}}" autoplay style="display: none;"></video>
<div style="padding-bottom: 3px;">
  <i class="fa fa-video-camera"></i>
  <select id="screen-type-{{screenNum}}">
    <option value="" SELECTED>None <i class="fa fa-video-camera"></i></option>
    <option value="playback">Playback</option>
  </select>
  <span id="playback-controls-{{screenNum}}" style="display: none;">
    <button id="playback-left-{{screenNum}}" class="tight"><i class="fa fa-chevron-left"></i></button>
    <button id="playback-play-pause-{{screenNum}}" class="tight"><i class="fa fa-play"></i></button>
    <button id="playback-right-{{screenNum}}" class="tight"><i class="fa fa-chevron-right"></i></button>
  </span>
  <input type="color" value="#FF0000" id="mark-color-{{screenNum}}" />
</div>
<canvas id="canvas-{{screenNum}}" width="640" height="360" class="framed"></canvas><br>
<table border="0" cellpadding="2" cellspacing="0">
  <tr>
    <td>
      <span class="label right-border">Last Frame:
        <input id="last-frame-trans-slider-{{screenNum}}" type="range" min="0" max="100" step="5" value="35" />
        <input id="last-frame-trans-{{screenNum}}" type="number" min="0" max="100" step="5" value="35" />%
      </span>
      <span class="label">Marks:
        <input id="marks-trans-slider-{{screenNum}}" type="range" min="0" max="100" step="5" value="35" />
        <input id="marks-trans-{{screenNum}}" type="number" min="0" max="100" step="5" value="35" />%
      </span>
    </td>
  </tr>
  <tr>
    <td>
      <button id="capture-frame-{{screenNum}}">Capture Frame <i class="fa fa-camera"></i></button>
      <button id="reset-marks-{{screenNum}}">Reset Marks <i class="fa fa-eraser"></i></button><br>
    </td>
  </tr>
</table>

<script>
(function(){
  var screen = new Screen(
    $("#canvas-{{screenNum}}")[0],
    $("#video-{{screenNum}}")[0]
  );

  $("#screen-type-{{screenNum}}").on("change", function() {
    var screenType = this.options[this.selectedIndex].value;
    if (screenType == "playback") {
      $("#playback-controls-{{screenNum}}")[0].style.display = "inline";

      screen.disableVideo();
      screen.enablePlayback();
    } else {
      $("#playback-controls-{{screenNum}}")[0].style.display = "none";

      screen.disablePlayback();
      if (screenType) {
        screen.enableVideo();
      } else {
        screen.disableVideo();
      }
    }
    Camera.setCameraVideo(screenType, $("#video-{{screenNum}}")[0]);
  });

  $("#playback-left-{{screenNum}}").on("click", function() {
    screen.prevFrame();
  });

  $("#playback-right-{{screenNum}}").on("click", function() {
    screen.nextFrame();
  });

  $("#playback-play-pause-{{screenNum}}").on("click", function() {
    if (screen.isPlaying()) {
      $("#playback-play-pause-{{screenNum}}")[0].innerHTML = "<i class=\"fa fa-play\"></i>";

      screen.pause();
    } else {
      $("#playback-play-pause-{{screenNum}}")[0].innerHTML = "<i class=\"fa fa-pause\"></i>";

      screen.play();
    }
  });

  $("#last-frame-trans-slider-{{screenNum}}")[0].value = screen.getLastFrameTrans();
  $("#last-frame-trans-{{screenNum}}")[0].value = screen.getLastFrameTrans();
  $("#last-frame-trans-slider-{{screenNum}}").on("change", function() {
    $("#last-frame-trans-{{screenNum}}")[0].value = this.value;
    screen.setLastFrameTrans(this.value);
  });
  $("#last-frame-trans-{{screenNum}}").on("change", function() {
    $("#last-frame-trans-{{screenNum}}")[0].value = this.value;
    screen.setLastFrameTrans(this.value);
  });

  $("#marks-trans-slider-{{screenNum}}")[0].value = screen.getMarksTrans();
  $("#marks-trans-{{screenNum}}")[0].value = screen.getMarksTrans();
  $("#marks-trans-slider-{{screenNum}}").on("change", function() {
    $("#marks-trans-{{screenNum}}")[0].value = this.value;
    screen.setMarksTrans(this.value);
  });
  $("#marks-trans-{{screenNum}}").on("change", function() {
    $("#marks-trans-{{screenNum}}")[0].value = this.value;
    screen.setMarksTrans(this.value);
  });
})();

$("#capture-frame-{{screenNum}}").on("click", function() {
  var data = Camera.captureFrame($("#video-{{screenNum}}")[0], currentTake.resolution);
  Take.saveCurrentFrameImage(currentTake, data, function(newTake) {
    newTake.currentFrame++;
    takeSetCurrent(newTake);
  });
});

Camera.getCameras(function(cameras) {
  function addCameraOption(cameraSelect, cameraInfo) {
    var cameraOption = document.createElement('option');
    cameraOption.value = cameraInfo.id;
    cameraOption.innerHTML = cameraInfo.name;
    cameraSelect.appendChild(cameraOption);
  }
  for (var i = 0; i < cameras.length; i++) {
    addCameraOption($("#screen-type-{{screenNum}}")[0], cameras[i]);
  }
});
</script>
